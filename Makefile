export GO111MODULE=on
LDFLAGS := -s -w

fmt:
	go fmt ./...

build-linux-all-arch:
 	# Build for all architectures, output: artifacts/downloader_os_arch
	env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "$(LDFLAGS)" -o ~/artifacts/downloader_linux_amd64 ./...
	env CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -ldflags "$(LDFLAGS)" -o ~/artifacts/downloader_linux_386 ./...
	env CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -ldflags "$(LDFLAGS)"  -o ~/artifacts/downloader_linux_arm ./...
	env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags "$(LDFLAGS)"  -o ~/artifacts/downloader_linux_arm64 ./...

build-darwin-all-arch:
 	# Build for all architectures, output: artifacts/downloader_os_arch
	env CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags "$(LDFLAGS)"  -o ~/artifacts/downloader_darwin_amd64 ./...
	env CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags "$(LDFLAGS)"  -o ~/artifacts/downloader_darwin_arm64 ./...

build-windows-all-arch:
 	# Build for all architectures, output: artifacts/downloader_os_arch
	env CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags "$(LDFLAGS)"  -o ~/artifacts/downloader_windows_amd64.exe ./...
	env CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -ldflags "$(LDFLAGS)"  -o ~/artifacts/downloader_windows_386.exe ./...
	env CGO_ENABLED=0 GOOS=windows GOARCH=arm go build -ldflags "$(LDFLAGS)"  -o ~/artifacts/downloader_windows_arm.exe ./...
	env CGO_ENABLED=0 GOOS=windows GOARCH=arm64 go build -ldflags "$(LDFLAGS)"  -o ~/artifacts/downloader_windows_arm64.exe ./...

build-all:
	make build-linux-all-arch
	make build-darwin-all-arch
	make build-windows-all-arch

